{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","App","useState","todosFromServer","todos","setTodos","setTitle","titleError","setTitleError","selectedUser","setSelectedUser","userError","setUserError","className","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","map","todo","htmlFor","type","value","onChange","target","placeholder","disabled","usersFromServer","user","findTodo","find","classNames","href","ReactDOM","render","document","getElementById"],"mappings":"8NAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,OCHCC,EAAgB,WAC3B,MAA0BC,mBAAiBC,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcQ,EAAd,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KA0CA,OACE,sBAAKC,UAAU,MAAf,UACE,+CAEA,uBACEC,OAAO,OACPC,SA9Ce,SAACC,GAapB,GAZAA,EAAMC,iBACNT,EAAc,IACdI,EAAa,IAEQ,KAAjBd,EAAMoB,QACRV,EAAc,wBAGK,KAAjBC,GACFG,EAAa,wBAGM,KAAjBd,EAAMoB,QAAkC,KAAjBT,EAAqB,CAC9C,IAEMU,EAAgB,CACpBzB,GAHY0B,KAAKC,IAAL,MAAAD,KAAI,YAAQhB,EAAMkB,KAAI,SAAAC,GAAI,OAAIA,EAAK7B,QAAO,EAItDI,MAAOA,EAAMoB,OACblB,QAASS,EACTV,WAAW,GAGbM,EAAS,GAAD,mBAAKD,GAAL,CAAYe,KAEpBb,EAAS,IACTI,EAAgB,MAkBhB,UAIE,sBAAKG,UAAU,QAAf,UACE,uBAAOW,QAAQ,aAAf,oBACA,uBACEC,KAAK,OACL,UAAQ,aACR/B,GAAG,aACHgC,MAAO5B,EACP6B,SAzBU,SAACX,GACnBV,EAASU,EAAMY,OAAOF,OACtBlB,EAAc,KAwBNqB,YAAY,kBAEbtB,GAAc,sBAAMM,UAAU,QAAhB,SAAyBN,OAG1C,sBAAKM,UAAU,QAAf,UACE,uBAAOW,QAAQ,aAAf,mBACA,yBACE9B,GAAG,aACH,UAAQ,aACRgC,MAAOjB,EACPkB,SAhCS,SAACX,GAClBN,EAAgBM,EAAMY,OAAOF,OAC7Bd,EAAa,KA0BP,UAME,wBAAQc,MAAM,GAAGI,UAAQ,EAAzB,2BAGCC,EAAgBT,KAAI,SAAAU,GAAI,OACvB,wBAAsBN,MAAOM,EAAKtC,GAAlC,SACGsC,EAAKrC,MADKqC,EAAKtC,UAMrBiB,GAAa,sBAAME,UAAU,QAAhB,SAAyBF,OAGzC,wBAAQc,KAAK,SAAS,UAAQ,eAA9B,oBAKF,yBAASZ,UAAU,WAAnB,SACGT,EAAMkB,KAAI,SAAAC,GACT,IAAMU,EAAWF,EACdG,MAAK,SAACF,GAAD,OAAUA,EAAKtC,KAAO6B,EAAKvB,UAEnC,OACE,0BACE,UAAQ,IACRa,UAAWsB,IACT,WACA,CAAE,sBAAuBZ,EAAKxB,YAJlC,UAOE,oBAAIc,UAAU,kBAAd,SACGU,EAAKzB,QAGR,mBACEe,UAAU,WACVuB,KAAI,wBAAYH,QAAZ,IAAYA,OAAZ,EAAYA,EAAUpC,OAF5B,gBAIGoC,QAJH,IAIGA,OAJH,EAIGA,EAAUtC,mBC9H3B0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d0f8f3a4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\ninterface Todo {\n  id: number;\n  title: string;\n  userId: number;\n  completed: boolean;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setTitleError('');\n    setUserError('');\n\n    if (title.trim() === '') {\n      setTitleError('Please enter a title');\n    }\n\n    if (selectedUser === '') {\n      setUserError('Please choose a user');\n    }\n\n    if (title.trim() !== '' && selectedUser !== '') {\n      const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n      const newTodo: Todo = {\n        id: newId,\n        title: title.trim(),\n        userId: +selectedUser,\n        completed: false,\n      };\n\n      setTodos([...todos, newTodo]);\n\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  const changeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError('');\n  };\n\n  const changeUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setUserError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title:</label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            value={title}\n            onChange={changeTitle}\n            placeholder=\"Enter a title\"\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={changeUser}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {todos.map(todo => {\n          const findTodo = usersFromServer\n            .find((user) => user.id === todo.userId);\n\n          return (\n            <article\n              data-id=\"1\"\n              className={classNames(\n                'TodoInfo',\n                { 'TodoInfo--completed': todo.completed },\n              )}\n            >\n              <h2 className=\"TodoInfo__title\">\n                {todo.title}\n              </h2>\n\n              <a\n                className=\"UserInfo\"\n                href={`mailto:${findTodo?.email}`}\n              >\n                {findTodo?.name}\n              </a>\n            </article>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}